{"version":3,"sources":["panels/Persik.js","panels/Home.js","App.js","index.js","img/persik.png"],"names":["Persik","platform","props","react_default","a","createElement","vkui","id","className","src","persik","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onStoryChange","e","setState","activeStory","currentTarget","dataset","story","go","activePanel","to","state","fetchedUser","_this2","connect","subscribe","detail","type","data","console","log","send","url","xhr","XMLHttpRequest","open","responseText","_this$props","tabbar","onClick","selected","data-story","text","newsfeed_default","search_default","label","messages_default","notifications_default","more_default","src_panels_Persik","React","Component","panels_Home","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.754bae8f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View, Tabbar, TabbarItem, Epic, Card} from '@vkontakte/vkui';\nimport connect from \"@vkontakte/vkui-connect\";\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\n\nimport Persik from './Persik';\nimport ReactDOM from \"react-dom\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tactiveStory: 'feed',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\n\n\t}\n\trender() {\n\t\tconst { id, go, fetchedUser } =this.props;\n\t\treturn (\n\n                <Epic activeStory={this.state.activeStory} tabbar={\n                    <Tabbar>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'feed'}\n                            data-story=\"feed\"\n                            text=\"Новости\"\n                        ><Icon28Newsfeed /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'discover'}\n                            data-story=\"discover\"\n                            text=\"Поиск\"\n                        ><Icon28Search /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'messages'}\n                            data-story=\"messages\"\n                            label=\"12\"\n                            text=\"Сообщения\"\n                        ><Icon28Messages /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'notifications'}\n                            data-story=\"notifications\"\n                            text=\"Уведомлен.\"\n                        ><Icon28Notifications /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'more'}\n                            data-story=\"more\"\n                            text=\"Ещё\"\n                        ><Icon28More /></TabbarItem>\n                    </Tabbar>\n                }>\n                    <View id=\"feed\" activePanel=\"feed\">\n                        <Panel id=\"feed\">\n                            <PanelHeader>Feed</PanelHeader>\n\t\t\t\t\t\t\t<Persik />\n                        </Panel>\n                    </View>\n                    <View id=\"discover\" activePanel=\"discover\">\n                        <Panel id=\"discover\">\n                            <PanelHeader>Discover</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"messages\" activePanel=\"messages\">\n                        <Panel id=\"messages\">\n                            <PanelHeader>Messages</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"notifications\" activePanel=\"notifications\">\n                        <Panel id=\"notifications\">\n                            <PanelHeader>Notifications</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"more\" activePanel=\"more\">\n                        <Panel id=\"more\">\n                            <PanelHeader>More</PanelHeader>\n                        </Panel>\n                    </View>\n                </Epic>\n\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport Persik from './panels/Persik';\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}