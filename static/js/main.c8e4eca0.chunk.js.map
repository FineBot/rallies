{"version":3,"sources":["img/persik.png","panels/Persik.js","panels/Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Persik","platform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","events","texts","times","url","xhr","XMLHttpRequest","open","send","responseText","re","get","JSON","parse","i","response","length","mesto","country","city","street","push","encodeURIComponent","title","starttime","ReactDOM","render","react_default","a","createElement","vkui","style","textAlign","fontSize","document","getElementById","item","decodeURIComponent","split","datetime","join","id","load","map","ret","React","Component","App","onStoryChange","e","setState","activeStory","currentTarget","dataset","story","go","activePanel","to","fetchedUser","_this2","connect","subscribe","detail","type","data","console","log","_this$props","tabbar","onClick","selected","data-story","text","label","newsfeed_default","search_default","messages_default","notifications_default","more_default","Persik_Persik","panels_Home","src_App"],"mappings":"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","file":"static/js/main.c8e4eca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS, Div, View, Group, Form, Card} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport ReactDOM from 'react-dom'\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\nexport default class Persik extends React.Component {\n\tconstructor(props){\n\tsuper(props);\n\n\tthis.state={\n\t\tevents:[],\n\t\ttexts:[],\n\t\ttimes:[],\n\t\t}\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\n\n\tload(){\n\t\tvar exp=\"\"\n\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\tre=JSON.parse(re)\n\t\tvar i =0\n\t\tfor(i;i<re.response.length;i++){\n\n\t\t\tvar mesto=re.response[i].country+\", \"+re.response[i].city+\", \"+re.response[i].street\n\t\t\tthis.state.events.push(encodeURIComponent(re.response[i].title)+\"&&&\"+encodeURIComponent(mesto)+\"&&&\"+encodeURIComponent(re.response[i].starttime))\n\n\n\t\t}\n\t\t//document.getElementById(\"test\").\n\t}\n\tload1(){\n\t\tvar exp=\"\"\n\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\tre=JSON.parse(re)\n\t\tvar i =0\n\t\tfor(i;i<re.response.length;i++){\n\t\t\tReactDOM.render(<Group><Div style={{textAlign:'down'}}>Title</Div><Div style={{fontSize:12, textAlign:'top'}}>Text<br/>tes</Div></Group>,document.getElementById(\"test\"))\n\t\t}\n\n\t}\n\n\tret(item, i){\n\t\tvar title=decodeURIComponent(item.split(\"&&&\")[0])\n\t\tvar mesto=decodeURIComponent(item.split(\"&&&\")[1])\n\t\tvar datetime=decodeURIComponent(item.split(\"&&&\")[2])\n\n\t\treturn(\n\n\t\t\t<Group><Div style={{textAlign:'down'}}>{title}</Div><Div style={{fontSize:12, textAlign:'top'}}>{decodeURIComponent(mesto).split(\"+\").join(\" \")}<br/>{datetime}</Div></Group>\n\t\t);\n\t}\n\trender() {\n\n\t\tconst props=this.props;\n\t\treturn (\n\t\t\t<Div id=\"test\">\n\t\t\t\t{this.load()}\n\t\t\t\t{this.state.events.map(this.ret)}\n\t\t\t</Div>\n\t\t);\n\t}\n}\nconst style={\n\n};\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View, Tabbar, TabbarItem, Epic, Card} from '@vkontakte/vkui';\nimport connect from \"@vkontakte/vkui-connect\";\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\n\nimport Persik from './Persik';\nimport ReactDOM from \"react-dom\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tactiveStory: 'feed',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\trender() {\n\t\tconst { id, go, fetchedUser } =this.props;\n\t\treturn (\n\n                <Epic activeStory={this.state.activeStory} tabbar={\n                    <Tabbar>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'feed'}\n                            data-story=\"feed\"\n                            text=\"События\"\n\t\t\t\t\t\t\tlabel=\"2\"\n                        ><Icon28Newsfeed /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'discover'}\n                            data-story=\"discover\"\n                            text=\"Поиск\"\n                        ><Icon28Search /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'messages'}\n                            data-story=\"messages\"\n                            text=\"Сообщения\"\n                        ><Icon28Messages /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'notifications'}\n                            data-story=\"notifications\"\n                            text=\"Уведомлен.\"\n                        ><Icon28Notifications /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'more'}\n                            data-story=\"more\"\n                            text=\"Ещё\"\n                        ><Icon28More /></TabbarItem>\n                    </Tabbar>\n                }>\n                    <View id=\"feed\" activePanel=\"feed\">\n                        <Panel id=\"feed\">\n                            <PanelHeader>Events</PanelHeader>\n\t\t\t\t\t\t\t<Persik />\n                        </Panel>\n                    </View>\n                    <View id=\"discover\" activePanel=\"discover\">\n                        <Panel id=\"discover\">\n                            <PanelHeader>Discover</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"messages\" activePanel=\"messages\">\n                        <Panel id=\"messages\">\n                            <PanelHeader>Messages</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"notifications\" activePanel=\"notifications\">\n                        <Panel id=\"notifications\">\n                            <PanelHeader>Notifications</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"more\" activePanel=\"more\">\n                        <Panel id=\"more\">\n                            <PanelHeader>More</PanelHeader>\n                        </Panel>\n                    </View>\n                </Epic>\n\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport Persik from './panels/Persik';\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}