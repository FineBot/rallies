{"version":3,"sources":["panels/Persik.js","panels/Home.js","App.js","index.js","img/persik.png"],"names":["osname","platform","Persik","props","react_default","a","createElement","vkui","id","left","onClick","go","data-to","IOS","chevron_back_default","back_default","className","src","persik","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","activePanel","currentTarget","dataset","to","state","fetchedUser","_this2","document","getElementById","innerText","get","connect","subscribe","detail","type","data","console","log","send","url","xhr","XMLHttpRequest","open","responseText","_this$props","title","before","photo_200","description","city","concat","first_name","last_name","size","level","React","Component","panels_Home","src_panels_Persik","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ebd7e8c9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View} from '@vkontakte/vkui';\nimport connect from \"@vkontakte/vkui-connect\";\nimport Persik from \"./Persik\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.getElementById(\"test1\").innerText=this.get(\"https://api.finebot.site\")\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\n\n\t}\n\trender() {\n\t\tconst { id, go, fetchedUser } =this.props;\n\t\treturn (\n\t\t\t<Panel id={id}>\n\t\t\t\t<PanelHeader>Example</PanelHeader>\n\t\t\t\t{fetchedUser &&\n\t\t\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t\t</ListItem>\n\t\t\t\t</Group>}\n\n\t\t\t\t<Group title=\"Navigation Example\">\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button id=\"test\" size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\t\t\tShow me the Persik, please\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Div id=\"test1\">lp[[</Div>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}