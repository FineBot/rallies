{"version":3,"sources":["panels/Full.js","panels/Persik.js","panels/Home.js","App.js","index.js","img/persik.png"],"names":["osname","platform","Persik","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","text","mesto","stattime","owner_id","chatlink","type","url","xhr","XMLHttpRequest","open","send","responseText","_this$props","go","starttime","own","toString","react_default","a","createElement","vkui","href","_this$props2","id","left","onClick","data-to","IOS","chevron_back_default","back_default","getOwner","React","Component","App","e","setState","activePanel","currentTarget","dataset","to","fetchedUser","events","activeStory","headerText","onStoryChange","bind","assertThisInitialized","_this2","load","connect","subscribe","detail","data","console","log","length","re","get","JSON","parse","i","response","country","city","street","push","encodeURIComponent","fetching","decodeURIComponent","split","join","datetime","item","_this3","style","height","textAlign","width","marginBottom","fontSize","goo","story","getHeader","tabbar","selected","data-story","newsfeed_default","search_default","user_default","notifications_default","more_default","map","ret","value","search","onChange","Full_Persik","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"gVASMA,eAASC,sBAEMC,cAEpB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAM,CACVC,MAAM,GACNC,KAAK,GACLC,MAAM,GACNC,SAAS,GACTC,SAAS,GACTC,SAAS,GACTC,KAAK,IAVYd,mEAgBde,GACH,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,OAAQH,GAAK,GACtBC,EAAIG,OACGH,EAAII,gDAIF,IAAAC,EAC2ClB,KAAKJ,MAAfa,GADjCS,EACFb,MADEa,EACIZ,KADJY,EACSC,GADTD,EACYX,MADZW,EACkBE,UADlBF,EAC4BP,KAD5BO,EACiCT,UAEtCY,EAAI,oBAAoBZ,EAASa,WACrC,MAAyB,cAAtBb,EAASa,WACJ,GAECC,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACPH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASrB,MAAM,sEACdkB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,KAAMN,GAAZ,YAA2BZ,sCAOtB,IAAAmB,EAE4C5B,KAAKJ,MAAlDS,EAFCuB,EAEDvB,MAAMC,EAFLsB,EAEKtB,KAAKa,EAFVS,EAEUT,GAAGZ,EAFbqB,EAEarB,MAAMa,EAFnBQ,EAEmBR,UAAUT,EAF7BiB,EAE6BjB,KAF7BiB,EAEkCnB,SAE1C,OAGEc,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOG,GAAG,QACTN,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACCI,KAAMP,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAcK,QAASZ,EAAIa,UAAQ,QAAQvC,IAAWwC,MAAMV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MAAuBD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,QAD1F,8CAKAD,EAAAC,EAAAC,cAACC,EAAA,MAAD,KAAOH,EAAAC,EAAAC,cAACC,EAAA,IAAD,KAAMrB,IACbkB,EAAAC,EAAAC,cAACC,EAAA,MAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASrB,MAAM,gEACbC,KAIJiB,EAAAC,EAAAC,cAACC,EAAA,MAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASrB,MAAM,kCACbE,IAGHgB,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASrB,MAAM,wCACbe,IAGHG,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASrB,MAAM,sBACbM,IAGFX,KAAKoC,qBAhFuBC,IAAMC,cCsB3B5C,qBAaO2C,IAAMC,UCfb5C,qBAwBG2C,IAAMC,0BC+KTC,SAtMA7C,iCAGd,SAAA6C,EAAY3C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IAClB1C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,KAAMJ,KAkCPuB,GAAK,SAACqB,GACL3C,EAAK4C,SAAS,CAAEC,YAAaF,EAAEG,cAAcC,QAAQC,MAjCrDhD,EAAKO,MAAQ,CACZsC,YAAa,OACbI,YAAa,KACJzC,MAAM,GACNC,KAAK,GACdyC,OAAO,GACExC,MAAM,GACNC,SAAS,GACTC,SAAS,GACTuC,YAAa,OACbtC,SAAS,GACTC,KAAK,GACdsC,WAAW,sEAGZpD,EAAKqD,cAAgBrD,EAAKqD,cAAcC,KAAnBrD,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAD,KAlBHA,mFAqBC,IAAAwD,EAAArD,KACnBA,KAAKsD,OACLC,IAAQC,UAAU,SAAChB,GAClB,OAAQA,EAAEiB,OAAO9C,MAChB,IAAK,4BACJ0C,EAAKZ,SAAS,CAAEK,YAAaN,EAAEiB,OAAOC,OACtC,MACD,QACCC,QAAQC,IAAIpB,EAAEiB,OAAO9C,SAGxB4C,IAAQvC,KAAK,sBAAuB,mCAUpC,GAA6B,GAA1BhB,KAAKI,MAAM2C,OAAOc,OAAU,CAC9B,IACIC,EAAG9D,KAAK+D,IAAI,8CAChBD,EAAGE,KAAKC,MAAMH,GAEd,IADA,IAAII,EAAG,EACDA,EAAEJ,EAAGK,SAASN,OAAOK,IAAI,CAE9B,IAAI3D,EAAMuD,EAAGK,SAASD,GAAGE,QAAQ,KAAKN,EAAGK,SAASD,GAAGG,KAAK,KAAKP,EAAGK,SAASD,GAAGI,OAC9EtE,KAAKI,MAAM2C,OAAOwB,KAAKC,mBAAmBV,EAAGK,SAASD,GAAG7D,OAAO,MAAMmE,mBAAmBjE,GAAO,MAAMiE,mBAAmBV,EAAGK,SAASD,GAAG9C,WAAW,MAAMoD,mBAAmBV,EAAGK,SAASD,GAAGxD,UAAU,MAAM8D,mBAAmBV,EAAGK,SAASD,GAAGzD,UAAU,MAAM+D,mBAAmBV,EAAGK,SAASD,GAAG5D,MAAM,MAAMkE,mBAAmBV,EAAGK,SAASD,GAAGvD,QAK/UX,KAAKyC,SAAS,CAACgC,UAAS,gCAGrBP,GACH,IAAI7D,EAAMqE,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KAC9EpE,EAAMmE,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KAAKA,MAAM,KAAKC,KAAK,KACnGC,EAASH,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KACjFjE,EAASgE,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KACjFlE,EAASiE,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KACjFrE,EAAKoE,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KAAKA,MAAM,KAAKC,KAAK,KAClGjE,EAAK+D,mBAAmBA,mBAAmB1E,KAAKI,MAAM2C,OAAOmB,GAAGS,MAAM,OAAO,KACjF3E,KAAKyC,SAAS,CAACC,YAAY,OAAOrC,MAAMA,EAAMC,KAAKA,EAAKC,MAAMA,EAAMa,UAAUyD,EAASpE,SAASA,EAASC,SAASA,EAASC,KAAKA,uCAGhI,IAAIU,EAAI,oBAAoBrB,KAAKI,MAAMK,SAASa,WAChD,MAAoC,cAAjCtB,KAAKI,MAAMK,SAASa,WACf,GAECC,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACPH,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASrB,MAAM,sEACdkB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,KAAMN,GAAZ,YAA2BrB,KAAKI,MAAMK,wCAKtCqE,EAAMZ,GAAE,IAAAa,EAAA/E,KAEPK,EAAMqE,mBAAmBI,EAAKH,MAAM,OAAO,IAC3CpE,EAAMmE,mBAAmBI,EAAKH,MAAM,OAAO,IAC3CE,EAASH,mBAAmBI,EAAKH,MAAM,OAAO,IACvC3E,KAAKJ,MAATuB,GACP,OAECI,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAQsD,MAAO,CAACC,OAAO,SACtB1D,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACCH,EAAAC,EAAAC,cAAA,QAAMuD,MAAO,CAACE,UAAU,OAAOC,MAAM,OAAOC,aAAa,IAAM/E,GAE/DkB,EAAAC,EAAAC,cAAA,QAAMuD,MAAO,CAACK,SAAS,GAAIH,UAAU,MAAME,aAAa,KAAMV,mBAAmBnE,GAAOoE,MAAM,KAAKC,KAAK,KAAKrD,EAAAC,EAAAC,cAAA,WAAMoD,GAEnHtD,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQK,QAAS,kBAAIgD,EAAKO,IAAIpB,IAAIlC,UAAQ,QAA1C,4EAQApB,GACH,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,OAAQH,GAAK,GACtBC,EAAIG,OACGH,EAAII,mDAEGuB,GACdxC,KAAKyC,SAAS,CAAEO,YAAaR,EAAEG,cAAcC,QAAQ2C,4CAIrD,MAA4B,aAAzBvF,KAAKI,MAAM4C,YAGZzB,EAAAC,EAAAC,cAACC,EAAA,YAAD,uCAUAH,EAAAC,EAAAC,cAACC,EAAA,YAAD,gDAKF,OACCH,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMgB,YAAa1C,KAAKI,MAAMsC,aAE7BnB,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOG,GAAG,QACR7B,KAAKwF,YAENjE,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMsB,YAAahD,KAAKI,MAAM4C,YAAayC,OAC1ClE,EAAAC,EAAAC,cAACC,EAAA,OAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACCK,QAAS/B,KAAKkD,cACdwC,SAAqC,SAA3B1F,KAAKI,MAAM4C,YACrB2C,aAAW,OACXrF,KAAK,sEACLiB,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,OACDD,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACCK,QAAS/B,KAAKkD,cACdwC,SAAqC,aAA3B1F,KAAKI,MAAM4C,YACrB2C,aAAW,WACXrF,KAAK,kCACLiB,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,OACDD,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACCK,QAAS/B,KAAKkD,cACdwC,SAAqC,aAA3B1F,KAAKI,MAAM4C,YACrB2C,aAAW,WAEXrF,KAAK,iEACLiB,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,OACDD,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACCK,QAAS/B,KAAKkD,cACdwC,SAAqC,kBAA3B1F,KAAKI,MAAM4C,YACrB2C,aAAW,gBACXrF,KAAK,2DACLiB,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,OACDD,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACCK,QAAS/B,KAAKkD,cACdwC,SAAqC,SAA3B1F,KAAKI,MAAM4C,YACrB2C,aAAW,OACXrF,KAAK,sBACLiB,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,SAGFD,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMG,GAAG,OAAOa,YAAY,QAC1B1C,KAAKI,MAAM2C,OAAOkD,IAAIjG,KAAKkG,IAAI/C,KAAKnD,QAEtCuB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMG,GAAG,WAAWa,YAAY,YAC/BnB,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQyE,MAAOnG,KAAKI,MAAMgG,OAAQC,SAAUrG,KAAKqG,YAElD9E,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMG,GAAG,WAAWa,YAAY,aAGhCnB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMG,GAAG,gBAAgBa,YAAY,kBAGrCnB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMG,GAAG,OAAOa,YAAY,WAK9BnB,EAAAC,EAAAC,cAAC6E,EAAD,CAAMzE,GAAG,OAAOV,GAAInB,KAAKmB,GAAId,MAAOL,KAAKI,MAAMC,MAAOC,KAAMN,KAAKI,MAAME,KAAMC,MAAOP,KAAKI,MAAMG,MAAOa,UAAWpB,KAAKI,MAAMgB,UAAWT,KAAMX,KAAKI,MAAMO,KAAMF,SAAUT,KAAKI,MAAMK,mBA9LrK4B,IAAMC,YCvBxBiB,IAAQvC,KAAK,eAAgB,IAQ7BuF,IAASC,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,MAASC,SAASC,eAAe,6BCnBjDC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.e0a9f6a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS, Div, View, Group, Form, Card, Root,InfoRow,List,Cell,Link,PullToRefresh,Button} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport ReactDOM from 'react-dom'\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nexport default class Persik extends React.Component {\n\n\tconstructor(props){\n\tsuper(props);\n\n\tthis.state={\n\t\ttitle:\"\",\n\t\ttext:\"\",\n\t\tmesto:\"\",\n\t\tstattime:\"\",\n\t\towner_id:\"\",\n\t\tchatlink:\"\",\n\t\ttype:\"\",\n\t\t}\n\n\n\t}\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\n\n\tgetOwner(){\n\t\tconst {title,text,go,mesto,starttime,type,owner_id}=this.props;\n\n\t\tvar own=\"https://vk.com/id\"+owner_id.toString();\n\t\tif(owner_id.toString()===\"undefined\"){\n\t\t\treturn \"\"\n\t\t}else{\n\t\t\treturn (<Cell>\n\t\t\t\t<InfoRow title=\"Организатор\">\n\t\t\t\t\t<Link href={own}>vk.com/id{owner_id}</Link>\n\t\t\t\t</InfoRow>\n\t\t\t</Cell>);\n\t\t}\n\t}\n\n\n\trender() {\n\n\t\tconst {title,text,go,mesto,starttime,type,owner_id}=this.props;\n\n\t\treturn (\n\n\n\t\t\t\t<Panel id=\"full\">\n\t\t\t\t\t<PanelHeader\n\t\t\t\t\t\tleft={<HeaderButton onClick={go} data-to=\"home\">{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}>\n\t\t\t\t\t\tСобытие\n\t\t\t\t\t</PanelHeader>\n\n\t\t\t\t\t<Group><Div>{title}</Div></Group>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<InfoRow title=\"Примечание\">\n\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<InfoRow title=\"Место\">\n\t\t\t\t\t\t\t\t\t{mesto}\n\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<InfoRow title=\"Начало\">\n\t\t\t\t\t\t\t\t\t{starttime}\n\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<InfoRow title=\"Тип\">\n\t\t\t\t\t\t\t\t\t{type}\n\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t{this.getOwner()}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Group></Panel>\n\n\n\t\t);\n\t}\n}\nconst style={\ntest:{\n\tmarginBottom:-4\n}\n};\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tPanel,\n\tPanelHeader,\n\tHeaderButton,\n\tplatform,\n\tIOS,\n\tDiv,\n\tView,\n\tGroup,\n\tForm,\n\tCard,\n\tRoot,\n\tInfoRow,\n\tList,\n\tCell,\n\tLink,\n\tPullToRefresh,\n\tButton,\n\tTabbar, TabbarItem, Epic\n} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport ReactDOM from 'react-dom'\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Full from \"./Full\"\nconst osname = platform();\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\nclass Persikf extends React.Component {\n\n\tconstructor(props){\n\tsuper(props);\n\n\tthis.state={\n\t\tevents:[],\n\t\tactiveView:'persik',\n\t\ttitle:\"\",\n\t\ttext:\"\",\n\t\tmesto:\"\",\n\t\tstattime:\"\",\n\t\towner_id:\"\",\n\t\tactiveStory: 'feed',\n\t\tchatlink:\"\",\n\t\ttype:\"\",\n\t\tfetching: false,\n\t\t}\n\n\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tback=()=>{\n\t\tconsole.log(\"ffffffff\")\n\t\tthis.setState({activeView:\"home\"})\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.load()\n\t}\n\treload(){\n\t\tthis.setState({events:[]})\n\t\tthis.load()\n\t}\n\tload(){\n\t\tthis.setState({ fetching: true });\n\n\t\tif(this.state.events.length==0){\n\t\t\tvar exp=\"\"\n\t\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\t\tre=JSON.parse(re)\n\t\t\tvar i =0\n\t\t\tfor(i;i<re.response.length;i++){\n\n\t\t\t\tvar mesto=re.response[i].country+\", \"+re.response[i].city+\", \"+re.response[i].street\n\t\t\t\tthis.state.events.push(encodeURIComponent(re.response[i].title)+\"&&&\"+encodeURIComponent(mesto)+\"&&&\"+encodeURIComponent(re.response[i].starttime)+\"&&&\"+encodeURIComponent(re.response[i].chatlink)+\"&&&\"+encodeURIComponent(re.response[i].owner_id)+\"&&&\"+encodeURIComponent(re.response[i].text)+\"&&&\"+encodeURIComponent(re.response[i].type))\n\n\n\t\t\t}\n\t\t}\n\t\tthis.setState({fetching:false})\n\t\t//document.getElementById(\"test\").\n\t}\n\tload1(){\n\t\tvar exp=\"\"\n\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\tre=JSON.parse(re)\n\t\tvar i =0\n\t\tfor(i;i<re.response.length;i++){\n\t\t\tReactDOM.render(<Group><Div style={{textAlign:'down'}}>Title</Div><Div style={{fontSize:12, textAlign:'top'}}>Text<br/>tes</Div></Group>,document.getElementById(\"test\"))\n\t\t}\n\n\t};\n\tgoo(i){\n\n\t\tvar title=decodeURIComponent(this.state.events[i].split(\"&&&\")[0])\n\t\tvar mesto=decodeURIComponent(this.state.events[i].split(\"&&&\")[1]).split(\"+\").join(\" \")\n\t\tvar datetime=decodeURIComponent(this.state.events[i].split(\"&&&\")[2])\n\t\tvar chatlink=decodeURIComponent(this.state.events[i].split(\"&&&\")[3])\n\t\tvar owner_id=decodeURIComponent(this.state.events[i].split(\"&&&\")[4])\n\t\tvar text=decodeURIComponent(this.state.events[i].split(\"&&&\")[5]).split(\"+\").join(\" \")\n\t\tvar type=decodeURIComponent(this.state.events[i].split(\"&&&\")[6])\n\t\tthis.setState({activeView:\"full\",title:title,text:text,mesto:mesto,starttime:datetime,owner_id:owner_id,chatlink:chatlink,type:type});\n\n\t}\n\tback(i){\n\t\tthis.setState({activeView:\"persik\"})\n\t}\n\tret(item, i){\n\t\tconst {act}=this.props\n\n\t\tvar title=decodeURIComponent(item.split(\"&&&\")[0])\n\t\tvar mesto=decodeURIComponent(item.split(\"&&&\")[1])\n\t\tvar datetime=decodeURIComponent(item.split(\"&&&\")[2])\n\t\tconst {go}=this.props\n\t\treturn(\n\n\t\t\t\t<Group  style={{height:'100%'}}>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<form style={{textAlign:'down',width:'100%',marginBottom:5}} >{title}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<form style={{fontSize:12, textAlign:'top',marginBottom:15}}>{decodeURIComponent(mesto).split(\"+\").join(\" \")}<br/>{datetime}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<Button onClick={()=>this.goo(i)} data-to=\"full\">Перейти</Button>\n\t\t\t\t\t</Div>\n\n\n\t\t\t\t</Group>\n\n\t\t);\n\t}\n\tgetOwner(){\n\t\tvar own=\"https://vk.com/id\"+this.state.owner_id.toString();\n\t\tif(this.state.owner_id.toString()===\"undefined\"){\n\t\t\treturn \"\"\n\t\t}else{\n\t\t\treturn (<Cell>\n\t\t\t\t<InfoRow title=\"Организатор\">\n\t\t\t\t\t<Link href={own}>vk.com/id{this.state.owner_id}</Link>\n\t\t\t\t</InfoRow>\n\t\t\t</Cell>);\n\t\t}\n\t}\n\n\n\trender() {\n\n\t\tconst props=this.props;\n\t\tconst {go,act}=this.props\n\n\t\treturn (\n\n\t\t\t<View id=\"feed\" activePanel={this.state.activeView}>\n\n\n\n\t\t\t\t\t\t\t\t<Panel id=\"persik\">\n\t\t\t\t\t\t\t\t\t<PanelHeader\n\t\t\t\t\t\t\t\t\t>Events</PanelHeader>\n\t\t\t\t\t\t\t\t\t{this.state.events.map(this.ret.bind(this))}\n\n\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t<Panel id=\"full\">\n\t\t\t\t\t\t\t\t\t<PanelHeader left={<HeaderButton onClick={()=>this.setState({activeView:\"persik\"})}><Icon24Back/></HeaderButton>}\n\t\t\t\t\t\t\t\t\t>Events</PanelHeader>\n\t\t\t\t\t\t\t\t\t<Group></Group>\n\t\t\t\t\t\t\t\t\t<Group onClick={()=>this.setState({activeView:\"persik\"})}><Div>{this.state.title}</Div></Group>\n\t\t\t\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t\t<InfoRow title=\"Примечание\">\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.text}\n\t\t\t\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t<InfoRow title=\"Место\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decodeURIComponent(this.state.mesto)}\n\t\t\t\t\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t<InfoRow title=\"Начало\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decodeURIComponent(this.state.starttime)}\n\t\t\t\t\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t<InfoRow title=\"Тип\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{decodeURIComponent(this.state.type)}\n\t\t\t\t\t\t\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t\t\t\t{this.getOwner()}\n\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t</Group>\n\n\t\t\t\t\t\t\t\t</Panel></View>\n\n\n\t\t);\n\t}\n}\nexport default Persikf\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tPanel,\n\tListItem,\n\tButton,\n\tGroup,\n\tDiv,\n\tAvatar,\n\tPanelHeader,\n\tView,\n\tTabbar,\n\tTabbarItem,\n\tEpic,\n\tCard,\n\n\tRoot,\n\tHeaderButton, IOS, InfoRow, List, Cell, platform, Link\n} from '@vkontakte/vkui';\n\nimport connect from \"@vkontakte/vkui-connect\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\n\nimport Persik from './Persik';\nimport ReactDOM from \"react-dom\";\nconst osname = platform();\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'persik',\n\t\t\tfetchedUser: null,\n\t\t\tactiveStory: 'feed',\n\t\t\tevents:[],\n\t\t\tactiveView:'home',\n\t\t\ttitle:\"\",\n\t\t\ttext:\"\",\n\t\t\tmesto:\"\",\n\t\t\tstattime:\"\",\n\t\t\towner_id:\"\",\n\t\t\tchatlink:\"\",\n\t\t\ttype:\"\",\n\t\t};\n\t}\n\tback(i){\n\t\tthis.setState({activeView:\"home\"})\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\tto(panel){\n\t\tconst { id, go, act } =this.props;\n\n\t\tthis.setState({act:\"full\"})\n\t}\n\tcomponentDidMount() {\n\t\tthis.load()\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\tgoo(i){\n\t\tvar title=decodeURIComponent(this.state.events[i].split(\"&&&\")[0])\n\t\tvar mesto=decodeURIComponent(this.state.events[i].split(\"&&&\")[1]).split(\"+\").join(\" \")\n\t\tvar datetime=decodeURIComponent(this.state.events[i].split(\"&&&\")[2])\n\t\tvar chatlink=decodeURIComponent(this.state.events[i].split(\"&&&\")[3])\n\t\tvar owner_id=decodeURIComponent(this.state.events[i].split(\"&&&\")[4])\n\t\tvar text=decodeURIComponent(this.state.events[i].split(\"&&&\")[5]).split(\"+\").join(\" \")\n\t\tvar type=decodeURIComponent(this.state.events[i].split(\"&&&\")[6])\n\t\tthis.setState({activeView:\"full\",title:title,text:text,mesto:mesto,starttime:datetime,owner_id:owner_id,chatlink:chatlink,type:type});\n\t}\n\tload(){\n\n\n\t\tif(this.state.events.length==0){\n\t\t\tvar exp=\"\"\n\t\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\t\tre=JSON.parse(re)\n\t\t\tvar i =0\n\t\t\tfor(i;i<re.response.length;i++){\n\n\t\t\t\tvar mesto=re.response[i].country+\", \"+re.response[i].city+\", \"+re.response[i].street\n\t\t\t\tthis.state.events.push(encodeURIComponent(re.response[i].title)+\"&&&\"+encodeURIComponent(mesto)+\"&&&\"+encodeURIComponent(re.response[i].starttime)+\"&&&\"+encodeURIComponent(re.response[i].chatlink)+\"&&&\"+encodeURIComponent(re.response[i].owner_id)+\"&&&\"+encodeURIComponent(re.response[i].text)+\"&&&\"+encodeURIComponent(re.response[i].type))\n\n\n\t\t\t}\n\t\t}\n\t\tthis.setState({fetching:false})\n\t\t//document.getElementById(\"test\").\n\t}\n\tgetOwner(){\n\t\tvar own=\"https://vk.com/id\"+this.state.owner_id.toString();\n\t\tif(this.state.owner_id.toString()===\"undefined\"){\n\t\t\treturn \"\"\n\t\t}else{\n\t\t\treturn (<Cell>\n\t\t\t\t<InfoRow title=\"Организатор\">\n\t\t\t\t\t<Link href={own}>vk.com/id{this.state.owner_id}</Link>\n\t\t\t\t</InfoRow>\n\t\t\t</Cell>);\n\t\t}\n\t}\n\tret(item, i){\n\n\t\tvar title=decodeURIComponent(item.split(\"&&&\")[0])\n\t\tvar mesto=decodeURIComponent(item.split(\"&&&\")[1])\n\t\tvar datetime=decodeURIComponent(item.split(\"&&&\")[2])\n\t\tconst {go}=this.props\n\t\treturn(\n\n\t\t\t<Group  style={{height:'100%'}}>\n\t\t\t\t<Div>\n\t\t\t\t\t<form style={{textAlign:'down',width:'100%',marginBottom:5}} >{title}\n\t\t\t\t\t</form>\n\t\t\t\t\t<form style={{fontSize:12, textAlign:'top',marginBottom:15}}>{decodeURIComponent(mesto).split(\"+\").join(\" \")}<br/>{datetime}\n\t\t\t\t\t</form>\n\t\t\t\t\t<Button onClick={go} data-to=\"full\">Перейти</Button>\n\t\t\t\t</Div>\n\n\n\t\t\t</Group>\n\n\t\t);\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\trender() {\n\t\tconst { id, go, act } =this.props;\n\t\treturn (\n\n\t\t\t<Panel id=\"home\">\n\t\t\t\t<PanelHeader\n\t\t\t\t>Events</PanelHeader>\n\t\t\t\t{this.state.events.map(this.ret.bind(this))}\n\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {\n\tView,\n\tRoot,\n\tPanelHeader,\n\tPanel,\n\tCell,\n\tInfoRow,\n\tLink,\n\tGroup,\n\tDiv,\n\tButton,\n\tSearch,\n\tEpic,\n\tTabbar,\n\tTabbarItem,\n\tHeaderButton,\n\tplatform,\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Full from './panels/Full';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon24User from '@vkontakte/icons/dist/24/user';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nconst osname = platform();\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: \"home\",\n\t\t\tfetchedUser: null,\n            title:\"\",\n            text:\"\",\n\t\t\tevents:[],\n            mesto:\"\",\n            stattime:\"\",\n            owner_id:\"\",\n            activeStory: 'feed',\n            chatlink:\"\",\n            type:\"\",\n\t\t\theaderText:\"Мероприятия\",\n\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.load()\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\n\t};\n\tload(){\n\n\n\t\tif(this.state.events.length==0){\n\t\t\tvar exp=\"\"\n\t\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\t\tre=JSON.parse(re)\n\t\t\tvar i =0\n\t\t\tfor(i;i<re.response.length;i++){\n\n\t\t\t\tvar mesto=re.response[i].country+\", \"+re.response[i].city+\", \"+re.response[i].street\n\t\t\t\tthis.state.events.push(encodeURIComponent(re.response[i].title)+\"&&&\"+encodeURIComponent(mesto)+\"&&&\"+encodeURIComponent(re.response[i].starttime)+\"&&&\"+encodeURIComponent(re.response[i].chatlink)+\"&&&\"+encodeURIComponent(re.response[i].owner_id)+\"&&&\"+encodeURIComponent(re.response[i].text)+\"&&&\"+encodeURIComponent(re.response[i].type))\n\n\n\t\t\t}\n\t\t}\n\t\tthis.setState({fetching:false})\n\t\t//document.getElementById(\"test\").\n\t}\n\tgoo(i){\n\t\tvar title=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[0]))\n\t\tvar mesto=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[1])).split(\"+\").join(\" \")\n\t\tvar datetime=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[2]))\n\t\tvar chatlink=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[3]))\n\t\tvar owner_id=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[4]))\n\t\tvar text=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[5])).split(\"+\").join(\" \")\n\t\tvar type=decodeURIComponent(decodeURIComponent(this.state.events[i].split(\"&&&\")[6]))\n\t\tthis.setState({activePanel:\"full\",title:title,text:text,mesto:mesto,starttime:datetime,owner_id:owner_id,chatlink:chatlink,type:type});\n\t}\n\tgetOwner(){\n\t\tvar own=\"https://vk.com/id\"+this.state.owner_id.toString();\n\t\tif(this.state.owner_id.toString()===\"undefined\"){\n\t\t\treturn \"\"\n\t\t}else{\n\t\t\treturn (<Cell>\n\t\t\t\t<InfoRow title=\"Организатор\">\n\t\t\t\t\t<Link href={own}>vk.com/id{this.state.owner_id}</Link>\n\t\t\t\t</InfoRow>\n\t\t\t</Cell>);\n\t\t}\n\t}\n\tret(item, i){\n\n\t\tvar title=decodeURIComponent(item.split(\"&&&\")[0])\n\t\tvar mesto=decodeURIComponent(item.split(\"&&&\")[1])\n\t\tvar datetime=decodeURIComponent(item.split(\"&&&\")[2])\n\t\tconst {go}=this.props\n\t\treturn(\n\n\t\t\t<Group  style={{height:'100%'}}>\n\t\t\t\t<Div>\n\t\t\t\t\t<form style={{textAlign:'down',width:'100%',marginBottom:5}} >{title}\n\t\t\t\t\t</form>\n\t\t\t\t\t<form style={{fontSize:12, textAlign:'top',marginBottom:15}}>{decodeURIComponent(mesto).split(\"+\").join(\" \")}<br/>{datetime}\n\t\t\t\t\t</form>\n\t\t\t\t\t<Button onClick={()=>this.goo(i)} data-to=\"full\">Открыть</Button>\n\t\t\t\t</Div>\n\n\n\t\t\t</Group>\n\n\t\t);\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\tonStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\tgetHeader(){\n\t\tif(this.state.activeStory===\"discover\"){\n\t\t\treturn(\n\n\t\t\t\t<PanelHeader\n\t\t\t\t>\n\t\t\t\tПоиск\n\t\t\t\t</PanelHeader>\n\n\n\n\t\t);\n\t\t}else{\n\t\t\treturn (\n\t\t\t\t<PanelHeader>Events</PanelHeader>\n\t\t\t);\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\n\t\t\t\t<Panel id=\"home\">\n\t\t\t\t\t{this.getHeader()}\n\n\t\t\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\t\tselected={this.state.activeStory === 'feed'}\n\t\t\t\t\t\t\t\tdata-story=\"feed\"\n\t\t\t\t\t\t\t\ttext=\"Мероприятия\"\n\t\t\t\t\t\t\t><Icon28Newsfeed /></TabbarItem>\n\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\t\tselected={this.state.activeStory === 'discover'}\n\t\t\t\t\t\t\t\tdata-story=\"discover\"\n\t\t\t\t\t\t\t\ttext=\"Поиск\"\n\t\t\t\t\t\t\t><Icon28Search /></TabbarItem>\n\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\t\tselected={this.state.activeStory === 'messages'}\n\t\t\t\t\t\t\t\tdata-story=\"messages\"\n\n\t\t\t\t\t\t\t\ttext=\"Мои события\"\n\t\t\t\t\t\t\t><Icon24User /></TabbarItem>\n\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\t\tselected={this.state.activeStory === 'notifications'}\n\t\t\t\t\t\t\t\tdata-story=\"notifications\"\n\t\t\t\t\t\t\t\ttext=\"Уведомлен.\"\n\t\t\t\t\t\t\t><Icon28Notifications /></TabbarItem>\n\t\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\t\tselected={this.state.activeStory === 'more'}\n\t\t\t\t\t\t\t\tdata-story=\"more\"\n\t\t\t\t\t\t\t\ttext=\"Ещё\"\n\t\t\t\t\t\t\t><Icon28More /></TabbarItem>\n\t\t\t\t\t\t</Tabbar>\n\t\t\t\t\t}>\n\t\t\t\t\t\t<Root id=\"feed\" activePanel=\"feed\">\n\t\t\t\t\t\t\t{this.state.events.map(this.ret.bind(this))}\n\t\t\t\t\t\t</Root>\n\t\t\t\t\t\t<Root id=\"discover\" activePanel=\"discover\">\n\t\t\t\t\t\t\t<Search value={this.state.search} onChange={this.onChange}/>\n\t\t\t\t\t\t</Root>\n\t\t\t\t\t\t<Root id=\"messages\" activePanel=\"messages\">\n\n\t\t\t\t\t\t</Root>\n\t\t\t\t\t\t<Root id=\"notifications\" activePanel=\"notifications\">\n\n\t\t\t\t\t\t</Root>\n\t\t\t\t\t\t<Root id=\"more\" activePanel=\"more\">\n\n\t\t\t\t\t\t</Root>\n\t\t\t\t\t</Epic>\n\t\t\t\t</Panel>\n\t\t\t\t<Full id=\"full\" go={this.go} title={this.state.title} text={this.state.text} mesto={this.state.mesto} starttime={this.state.starttime} type={this.state.type} owner_id={this.state.owner_id}/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport Persik from './panels/Persik';\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}