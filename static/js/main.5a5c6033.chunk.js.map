{"version":3,"sources":["img/persik.png","panels/Persik.js","panels/Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Persik","platform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","xhr","XMLHttpRequest","open","send","responseText","load","re","get","JSON","parse","i","response","length","react_default","a","createElement","vkui","id","style","textAlign","fontSize","React","Component","App","onStoryChange","e","setState","activeStory","currentTarget","dataset","story","go","activePanel","to","fetchedUser","_this2","connect","subscribe","detail","type","data","console","log","_this$props","tabbar","onClick","selected","data-story","text","newsfeed_default","search_default","label","messages_default","notifications_default","more_default","Persik_Persik","panels_Home","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a5c6033.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS, Div, View, Group, Form, Card} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\nexport default class Persik extends React.Component {\n\tconstructor(props){\n\tsuper(props);\n\tthis.state={\n\n\t\t}\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\tcomponentDidMount() {\n\t\tthis.load()\n\t}\n\tload(){\n\t\tvar exp=\"\"\n\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\tre=JSON.parse(re)\n\t\tvar i =0\n\t\tfor(i;i<re.response.length;i++){\n\t\t\texp=exp+\"\"\n\t\t}\n\t//\tdocument.getElementById(\"test\").innerHTML=exp\n\t}\n\n\trender() {\n\n\t\tconst props=this.props;\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<Div id=\"test\">\n\t\t\t\t\t<Group><Div style={{textAlign:'down'}}>Title</Div><Div style={{fontSize:12, textAlign:'top'}}>Text<br/>tes</Div></Group>\n\n\t\t\t\t</Div>\n\t\t\t</form>\n\t\t);\n\t}\n}\nconst style={\n\n};\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View, Tabbar, TabbarItem, Epic, Card} from '@vkontakte/vkui';\nimport connect from \"@vkontakte/vkui-connect\";\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\n\nimport Persik from './Persik';\nimport ReactDOM from \"react-dom\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tactiveStory: 'feed',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\trender() {\n\t\tconst { id, go, fetchedUser } =this.props;\n\t\treturn (\n\n                <Epic activeStory={this.state.activeStory} tabbar={\n                    <Tabbar>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'feed'}\n                            data-story=\"feed\"\n                            text=\"Новости\"\n                        ><Icon28Newsfeed /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'discover'}\n                            data-story=\"discover\"\n                            text=\"Поиск\"\n                        ><Icon28Search /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'messages'}\n                            data-story=\"messages\"\n                            label=\"12\"\n                            text=\"Сообщения\"\n                        ><Icon28Messages /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'notifications'}\n                            data-story=\"notifications\"\n                            text=\"Уведомлен.\"\n                        ><Icon28Notifications /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'more'}\n                            data-story=\"more\"\n                            text=\"Ещё\"\n                        ><Icon28More /></TabbarItem>\n                    </Tabbar>\n                }>\n                    <View id=\"feed\" activePanel=\"feed\">\n                        <Panel id=\"feed\">\n                            <PanelHeader>Feed</PanelHeader>\n\t\t\t\t\t\t\t<Persik />\n                        </Panel>\n                    </View>\n                    <View id=\"discover\" activePanel=\"discover\">\n                        <Panel id=\"discover\">\n                            <PanelHeader>Discover</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"messages\" activePanel=\"messages\">\n                        <Panel id=\"messages\">\n                            <PanelHeader>Messages</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"notifications\" activePanel=\"notifications\">\n                        <Panel id=\"notifications\">\n                            <PanelHeader>Notifications</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"more\" activePanel=\"more\">\n                        <Panel id=\"more\">\n                            <PanelHeader>More</PanelHeader>\n                        </Panel>\n                    </View>\n                </Epic>\n\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport Persik from './panels/Persik';\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}