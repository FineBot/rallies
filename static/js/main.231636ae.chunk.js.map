{"version":3,"sources":["img/persik.png","panels/Persik.js","panels/Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Persik","platform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","xhr","XMLHttpRequest","open","send","responseText","load","document","getElementById","innerHTML","react_default","a","createElement","vkui","id","React","Component","App","onStoryChange","e","setState","activeStory","currentTarget","dataset","story","go","activePanel","to","fetchedUser","_this2","connect","subscribe","detail","type","data","console","log","_this$props","tabbar","onClick","selected","data-story","text","newsfeed_default","search_default","label","messages_default","notifications_default","more_default","Persik_Persik","panels_Home","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.231636ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS, Div, View, Group, Form, Card} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\nexport default class Persik extends React.Component {\n\tconstructor(props){\n\tsuper(props);\n\tthis.state={\n\n\t\t}\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\tcomponentDidMount() {\n\t\tthis.load()\n\t}\n\tload(){\n\t\tdocument.getElementById(\"test\").innerHTML=\"<input/>\"\n\t}\n\n\trender() {\n\n\t\tconst props=this.props;\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<Div id=\"test\"></Div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View, Tabbar, TabbarItem, Epic, Card} from '@vkontakte/vkui';\nimport connect from \"@vkontakte/vkui-connect\";\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\n\nimport Persik from './Persik';\nimport ReactDOM from \"react-dom\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tactiveStory: 'feed',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\trender() {\n\t\tconst { id, go, fetchedUser } =this.props;\n\t\treturn (\n\n                <Epic activeStory={this.state.activeStory} tabbar={\n                    <Tabbar>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'feed'}\n                            data-story=\"feed\"\n                            text=\"Новости\"\n                        ><Icon28Newsfeed /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'discover'}\n                            data-story=\"discover\"\n                            text=\"Поиск\"\n                        ><Icon28Search /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'messages'}\n                            data-story=\"messages\"\n                            label=\"12\"\n                            text=\"Сообщения\"\n                        ><Icon28Messages /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'notifications'}\n                            data-story=\"notifications\"\n                            text=\"Уведомлен.\"\n                        ><Icon28Notifications /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'more'}\n                            data-story=\"more\"\n                            text=\"Ещё\"\n                        ><Icon28More /></TabbarItem>\n                    </Tabbar>\n                }>\n                    <View id=\"feed\" activePanel=\"feed\">\n                        <Panel id=\"feed\">\n                            <PanelHeader>Feed</PanelHeader>\n\t\t\t\t\t\t\t<Persik />\n                        </Panel>\n                    </View>\n                    <View id=\"discover\" activePanel=\"discover\">\n                        <Panel id=\"discover\">\n                            <PanelHeader>Discover</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"messages\" activePanel=\"messages\">\n                        <Panel id=\"messages\">\n                            <PanelHeader>Messages</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"notifications\" activePanel=\"notifications\">\n                        <Panel id=\"notifications\">\n                            <PanelHeader>Notifications</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"more\" activePanel=\"more\">\n                        <Panel id=\"more\">\n                            <PanelHeader>More</PanelHeader>\n                        </Panel>\n                    </View>\n                </Epic>\n\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport Persik from './panels/Persik';\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}