{"version":3,"sources":["img/persik.png","panels/Persik.js","panels/Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Persik","platform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","events","texts","times","url","xhr","XMLHttpRequest","open","send","responseText","re","get","JSON","parse","i","response","length","date","Date","date1","starttime","minutes","getUTCMinutes","hours","getUTCHours","toString","datetime","getUTCDate","getUTCMonth","getUTCFullYear","country","city","street","push","title","text","ReactDOM","render","react_default","a","createElement","vkui","style","textAlign","fontSize","document","getElementById","item","id","load","map","ret","React","Component","App","onStoryChange","e","setState","activeStory","currentTarget","dataset","story","go","activePanel","to","fetchedUser","_this2","connect","subscribe","detail","type","data","console","log","_this$props","tabbar","onClick","selected","data-story","newsfeed_default","search_default","label","messages_default","notifications_default","more_default","Persik_Persik","panels_Home","src_App"],"mappings":"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","file":"static/js/main.8502187c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS, Div, View, Group, Form, Card} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport ReactDOM from 'react-dom'\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\nexport default class Persik extends React.Component {\n\tconstructor(props){\n\tsuper(props);\n\n\tthis.state={\n\t\tevents:[],\n\t\ttexts:[],\n\t\ttimes:[],\n\t\t}\n\t}\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\tcomponentDidMount() {\n\t\n\t}\n\tload(){\n\t\tvar exp=\"\"\n\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\tre=JSON.parse(re)\n\t\tvar i =0\n\t\tfor(i;i<re.response.length;i++){\n\t\t\tvar date = new Date();\n\t\t\tvar date1=new Date(re.response[i].starttime*1000);\n\t\t\tvar minutes=date1.getUTCMinutes();\n\t\t\tvar hours=date1.getUTCHours()\n\t\t\tif(hours<10){hours=\"0\"+hours.toString()}\n\t\t\tif(minutes<10){minutes=\"0\"+minutes.toString()}\n\t\t\tvar datetime=\"\"\n\t\t\tif(date.getUTCDate()==date1.getUTCDate()){\n\t\t\t\tdatetime=datetime+\"Сегодня,\"\n\t\t\t}else if(date.getUTCDate()+1==date1.getUTCDate()){\n\t\t\t\tdatetime=datetime+\"Завтра,\"\n\t\t\t}else{\n\t\t\t\tdatetime=datetime+date1.getUTCDate().toString()+\".\"+date1.getUTCMonth().toString()+\".\"+date1.getUTCFullYear().toString()\n\t\t\t}\n\t\t\tdatetime=datetime+\" в \"+hours.toString()+\":\"+minutes.toString()\n\n\n\n\t\t\tvar mesto=re.response[i].country+\", \"+re.response[i].city+\", \"+re.response[i].street\n\t\t\tthis.state.events.push(re.response[i].title)\n\t\t\tthis.state.texts.push(re.response[i].text)\n\t\t\tthis.state.times.push(datetime)\n\n\t\t}\n\t\t//document.getElementById(\"test\").\n\t}\n\tload1(){\n\t\tvar exp=\"\"\n\t\tvar re=this.get(\"https://api.finebot.site/events/events.get\")\n\t\tre=JSON.parse(re)\n\t\tvar i =0\n\t\tfor(i;i<re.response.length;i++){\n\t\t\tReactDOM.render(<Group><Div style={{textAlign:'down'}}>Title</Div><Div style={{fontSize:12, textAlign:'top'}}>Text<br/>tes</Div></Group>,document.getElementById(\"test\"))\n\t\t}\n\n\t}\n\n\tret(item, i){\n\n\t\treturn(\n\n\t\t\t<Group><Div style={{textAlign:'down'}}>{item}</Div><Div style={{fontSize:12, textAlign:'top'}}>f<br/>l</Div></Group>\n\t\t);\n\t}\n\trender() {\n\n\t\tconst props=this.props;\n\t\treturn (\n\t\t\t<Div id=\"test\">\n\t\t\t\t{this.load()}\n\t\t\t\t{this.state.events.map(this.ret)}\n\t\t\t</Div>\n\t\t);\n\t}\n}\nconst style={\n\n};\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, View, Tabbar, TabbarItem, Epic, Card} from '@vkontakte/vkui';\nimport connect from \"@vkontakte/vkui-connect\";\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\n\nimport Persik from './Persik';\nimport ReactDOM from \"react-dom\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tactiveStory: 'feed',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\tonStoryChange =(e)=>{\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tget(url){\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url, false);\n\t\txhr.send();\n\t\treturn xhr.responseText;\n\t}\n\trender() {\n\t\tconst { id, go, fetchedUser } =this.props;\n\t\treturn (\n\n                <Epic activeStory={this.state.activeStory} tabbar={\n                    <Tabbar>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'feed'}\n                            data-story=\"feed\"\n                            text=\"Новости\"\n                        ><Icon28Newsfeed /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'discover'}\n                            data-story=\"discover\"\n                            text=\"Поиск\"\n                        ><Icon28Search /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'messages'}\n                            data-story=\"messages\"\n                            label=\"12\"\n                            text=\"Сообщения\"\n                        ><Icon28Messages /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'notifications'}\n                            data-story=\"notifications\"\n                            text=\"Уведомлен.\"\n                        ><Icon28Notifications /></TabbarItem>\n                        <TabbarItem\n                            onClick={this.onStoryChange}\n                            selected={this.state.activeStory === 'more'}\n                            data-story=\"more\"\n                            text=\"Ещё\"\n                        ><Icon28More /></TabbarItem>\n                    </Tabbar>\n                }>\n                    <View id=\"feed\" activePanel=\"feed\">\n                        <Panel id=\"feed\">\n                            <PanelHeader>Feed</PanelHeader>\n\t\t\t\t\t\t\t<Persik />\n                        </Panel>\n                    </View>\n                    <View id=\"discover\" activePanel=\"discover\">\n                        <Panel id=\"discover\">\n                            <PanelHeader>Discover</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"messages\" activePanel=\"messages\">\n                        <Panel id=\"messages\">\n                            <PanelHeader>Messages</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"notifications\" activePanel=\"notifications\">\n                        <Panel id=\"notifications\">\n                            <PanelHeader>Notifications</PanelHeader>\n                        </Panel>\n                    </View>\n                    <View id=\"more\" activePanel=\"more\">\n                        <Panel id=\"more\">\n                            <PanelHeader>More</PanelHeader>\n                        </Panel>\n                    </View>\n                </Epic>\n\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default App;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport Persik from './panels/Persik';\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}